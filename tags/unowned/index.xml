<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>unowned on try Combine</title>
    <link>https://trycombine.com/tags/unowned/</link>
    <description>Recent content in unowned on try Combine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Mar 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://trycombine.com/tags/unowned/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using self, weak, and unowned in Combine</title>
      <link>https://trycombine.com/posts/self-weak-unowned/</link>
      <pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://trycombine.com/posts/self-weak-unowned/</guid>
      <description>One of the most often asked questions in the Combine and RxSwift slack channels is something along the lines of:
Should I use self, weak, or unowned with my reactive code?
Given that most operators take closures, it&amp;rsquo;s a fair question. In this post I&amp;rsquo;ll go over common scenarios for using weak, unowned or simply self and include links with more information at the bottom.
 Important: Combine code is still plain Swift - memory management works exactly as in any other of your Swift apps.</description>
    </item>
    
  </channel>
</rss>