<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Combine on try Combine</title>
    <link>http://trycombine.com/tags/combine/</link>
    <description>Recent content in Combine on try Combine</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://trycombine.com/tags/combine/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Simple custom Combine operators</title>
      <link>http://trycombine.com/posts/simple-custom-combine-operators/</link>
      <pubDate>Fri, 02 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://trycombine.com/posts/simple-custom-combine-operators/</guid>
      <description>Creating simple custom operators is very straight forward in Combine.
As long as your custom operator can be expressed via existing operators you don&amp;rsquo;t need to create a new publisher type - you can simply extend the Publisher protocol with your own custom operator.
Let&amp;rsquo;s try quickly creating on now.
Extending Publisher You can extend Publisher like any other protocol in Swift. For this post I&amp;rsquo;ll create a debugging operator that writes logs to the system console.</description>
    </item>
    
  </channel>
</rss>