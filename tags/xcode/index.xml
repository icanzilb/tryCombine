<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xcode on try Code</title>
    <link>https://trycombine.com/tags/xcode/</link>
    <description>Recent content in xcode on try Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://trycombine.com/tags/xcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Extending Xcode with power-ups</title>
      <link>https://trycombine.com/posts/xcode-powerups/</link>
      <pubDate>Mon, 20 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://trycombine.com/posts/xcode-powerups/</guid>
      <description>In this post I describe the technical setup of a small language experiment I developed to aid myself working on custom Xcode instruments.
The need for a more flexible coding inside Xcode Last month, I prototyped a Swift IDE and became very interested in enhancing the experience of building with Swift. (Since Apple doesn&amp;rsquo;t hire remotely, I wonder what other companies are working in that area?)
A little later, I came back to updating my custom Xcode Instrument called Timelane to support debugging new code based on the new Swift modern concurrency APIs:</description>
    </item>
    
  </channel>
</rss>
