<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>types on try Code</title>
    <link>https://trycombine.com/tags/types/</link>
    <description>Recent content in types on try Code</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Nov 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://trycombine.com/tags/types/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Injecting code in result builders</title>
      <link>https://trycombine.com/posts/an-example-of-using-arbitrary-code-in-result-builders/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://trycombine.com/posts/an-example-of-using-arbitrary-code-in-result-builders/</guid>
      <description>This is a rather quick post about running some arbitrary code inside result builders.
Result builders are great and often make the code much more readable — think SwiftUI vs UIKit&amp;hellip; but builder blocks are quite strict about the types they expect to find so using arbitrary prints or calling other functions isn&amp;rsquo;t always easy, per sè.
I am often times a fan of inserting a print or two in the code, especially when I&amp;rsquo;m exploring new code.</description>
    </item>
    
  </channel>
</rss>
